[{"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\index.js":"1","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\App.js":"2","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\LoginScreen.js":"3","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\context\\AuthContext.js":"4","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\SignupScreen.js":"5","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\AdminDashboard.js":"6","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\UserDashboard.js":"7","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserList.js":"8","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\Sidebar.js":"9","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\AdminDefault.js":"10","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\AdminLoader.js":"11","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserSidebar.js":"12","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserFilesList.js":"13","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\utils\\constants.js":"14","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserApp.js":"15","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserHeader.js":"16"},{"size":571,"mtime":1621434297810,"results":"17","hashOfConfig":"18"},{"size":3494,"mtime":1621428494270,"results":"19","hashOfConfig":"18"},{"size":6169,"mtime":1619092841165,"results":"20","hashOfConfig":"18"},{"size":3184,"mtime":1621350434022,"results":"21","hashOfConfig":"18"},{"size":5886,"mtime":1619092841166,"results":"22","hashOfConfig":"18"},{"size":5519,"mtime":1619092841164,"results":"23","hashOfConfig":"18"},{"size":542,"mtime":1621430961282,"results":"24","hashOfConfig":"18"},{"size":14317,"mtime":1619092841093,"results":"25","hashOfConfig":"18"},{"size":1799,"mtime":1619092841092,"results":"26","hashOfConfig":"18"},{"size":880,"mtime":1619092841091,"results":"27","hashOfConfig":"18"},{"size":407,"mtime":1619092841091,"results":"28","hashOfConfig":"18"},{"size":2117,"mtime":1621346642517,"results":"29","hashOfConfig":"18"},{"size":2461,"mtime":1621261668528,"results":"30","hashOfConfig":"18"},{"size":49,"mtime":1621357929188,"results":"31","hashOfConfig":"18"},{"size":5105,"mtime":1621439343629,"results":"32","hashOfConfig":"18"},{"size":634,"mtime":1621439401175,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s39dun",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\index.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\App.js",[],["70","71"],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\LoginScreen.js",["72"],"import axios from \"axios\";\r\nimport React, {useContext, useState, useEffect} from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { Grid, Header, Form, Segment, Message } from \"semantic-ui-react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\n\r\nexport default function LoginScreen() {\r\n\r\n  const [animateClass, changeAnimateClass] = useState('');\r\n\r\n  const {setUser} = useContext(AuthContext);\r\n\r\n  const history = useHistory();\r\n\r\n  const [formError, setFormError] = useState({});\r\n\r\n  const [submitError, setSubmitError] = useState(false);\r\n\r\n  const [isFormSubmitting, setFormSubmitting] = useState(false);\r\n\r\n  const location = useLocation();\r\n\r\n  const {from, message} = location.state || {from: {pathname: \"/\"}, message: null};\r\n\r\n  //console.log(from, message)\r\n\r\n  const handleSubmit = (e, setUser) =>{\r\n\r\n    setSubmitError(null);\r\n\r\n    e.preventDefault();\r\n    let email = e.target.email.value;\r\n    let password = e.target.password.value;\r\n    if(!email)\r\n      setFormError({...formError, email: \"Required!\"});\r\n    if(!password)\r\n      setFormError({...formError, password: \"Required!\"});\r\n    \r\n    if(email && password){\r\n\r\n      setFormSubmitting(true);\r\n\r\n      axios.post('http://localhost:5000/log-in', {email, password}, {withCredentials: true})\r\n\r\n      // fetch('http://localhost:5000/log-in', {\r\n      //   headers: {\r\n      //   \"Content-Type\": \"application/json\",\r\n\t\t\t//   'Accept': \"application/json\",\r\n      // },\r\n      //   method: \"POST\",\r\n      //   // mode: \"no-cors\",\r\n      //   cache: \"no-cache\",\r\n      //   body: JSON.stringify({email, password})\r\n      // })\r\n      .then(res=>{\r\n        \r\n        if(res.status === 200){\r\n            return res.data;\r\n        }else{\r\n           \r\n            throw Error('Error fetching data');\r\n        }\r\n      })\r\n      // .then(res=>{\r\n      //   console.log(res)\r\n      //   if(res.status===200)\r\n      //       return res.json();\r\n      //   else{\r\n      //       throw Error('Error Fetching data from server.')\r\n      //   }\r\n      // })\r\n      .then(result=>{\r\n        //console.log(result)\r\n        //authentication successful\r\n        if(result.response_status === 1000)\r\n          {\r\n            //setting user object for further use\r\n            setUser(result.user); //setUser from AuthContext\r\n            \r\n            //do otherthing....\r\n            setTimeout(function(){history.push((from.pathname===\"/\")?result.redirect: from.pathname)}, 800)\r\n          }\r\n      })\r\n      .catch(err=>{\r\n        console.log(err.response);\r\n        if(err.response.data){\r\n          if(err.response.data.response_status === 401){\r\n            setSubmitError(err.response.data.message);\r\n          }\r\n        }\r\n        else{\r\n          setSubmitError(err.message);\r\n        }\r\n        setFormSubmitting(false);\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  const handleChange = (e) =>{\r\n    if(e.target.name === 'email'){\r\n\r\n      let regex = /^[^\\s@]+@[^\\s@\\.]+\\.[^\\s@]+$/gi;\r\n      \r\n      regex.test(e.target.value)\r\n        ?setFormError({...formError, email: null})\r\n        :setFormError({...formError, email: \"Invalid Email\"});\r\n    }\r\n    else if(e.target.name === 'password'){\r\n\r\n      let regex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/gi;\r\n\r\n      regex.test(e.target.value)\r\n        ?setFormError({...formError, password:null})\r\n        :setFormError({...formError, password: \"At least one letter, one number and one special character\"});\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(()=>{setTimeout(function(){changeAnimateClass('show-component')}, 100)},[]);\r\n\r\n  return (\r\n      <div className={\"signup-form hidden-initial \" + animateClass}>\r\n      \r\n      <style>{`\r\n      body > div,\r\n      body > div > div,\r\n      body > div > div > div.login-form {\r\n        height: 100%;\r\n      }\r\n    `}</style>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100%\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n\r\n        <Header as=\"p\" color=\"red\" textAlign=\"center\">\r\n            <br />\r\n            {message? message: \"\"}\r\n        </Header>\r\n\r\n          <Header as=\"p\" color=\"blue\" textAlign=\"center\">\r\n            <br />\r\n            Login\r\n          </Header>\r\n          {submitError &&\r\n          <Message color=\"red\">\r\n            <Message.Header>\r\n              {submitError}\r\n            </Message.Header>\r\n          </Message>}\r\n          <Form size=\"large\" onSubmit={(event)=>handleSubmit(event, setUser)} action=\"POST\">\r\n\r\n          {/* {formError &&\r\n            <Message color=\"red\">\r\n              <Message.Header>Error</Message.Header>\r\n              \r\n                <ul style={{paddingLeft: 10, textAlign: \"left\"}}>\r\n                  {Object.keys(formError).map(key=>{\r\n                    return (\r\n                      <li key={key}>{formError[key]}</li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n            \r\n            </Message>\r\n          } */}\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email address\"\r\n                name=\"email\"\r\n                label=\"Email Address\"\r\n                error={formError && formError.email}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                error={formError && formError.password}\r\n                onChange={handleChange}\r\n              />\r\n\r\n\r\n              <button className={\"ui blue large fluid button \"+(isFormSubmitting?\"loading\":\"\")} type=\"submit\" disabled={isFormSubmitting || !Object.keys(formError).length>0 || (formError.email || formError.password)}>Login</button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Not registered yet? <Link to=\"/sign-up\"> Register</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\context\\AuthContext.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\SignupScreen.js",["73"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Grid, Header, Form, Segment, Message } from \"semantic-ui-react\";\r\n\r\nexport default function SignupScreen() {\r\n\r\n  const [animateClass, changeAnimateClass] = useState('');\r\n\r\n  const [formError, setFormError] = useState({});\r\n\r\n  const [submitError, setSubmitError] = useState(false);\r\n\r\n  const [isFormSubmitting, setFormSubmitting] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const roleOption = [\r\n      {text: \"Exam Cell\", value: \"EXAM_CELL\"},\r\n      {text: \"Placement Cell\", value: \"PLACEMENT_CELL\"},\r\n  ]\r\n\r\n  const handleSubmit = (e) =>{\r\n\r\n    setSubmitError(null);\r\n\r\n    e.preventDefault();\r\n\r\n    let email = e.target.email.value;\r\n    let password = e.target.password.value;\r\n    let role = e.target.role.value;\r\n    let name = e.target.name.value;\r\n\r\n    let error = {};\r\n\r\n\r\n    if(!name)\r\n      error.name = \"Required\";\r\n    if(!email)\r\n      error.email = \"Required\";\r\n    if(!password)\r\n      error.password = \"Required\";\r\n    if(!role)\r\n      error.role = \"Required\";\r\n\r\n    if(error && Object.keys(error).length > 0)\r\n        setFormError({...formError, ...error});\r\n\r\n    if(error && Object.keys(error).length === 0){\r\n      setFormSubmitting(true);\r\n\r\n      fetch('http://localhost:5000/sign-up', {\r\n        headers: {\r\n        'Cache-Control': 'no-cache',\r\n        \"Content-Type\": \"application/json\",\r\n\t\t\t  'Accept': \"application/json\",\r\n      },\r\n        method: \"POST\",\r\n        body: JSON.stringify({email, password, role, name})\r\n      })\r\n      .then(res=>res.json())\r\n      .then(result=>{\r\n        //show successful message\r\n        if(result.response_status===1000)\r\n          {\r\n            //registration successful\r\n            //redirect to login page.\r\n            \r\n            setTimeout( function(){history.push({pathname: \"/log-in\", state: {from: {pathname:'/'}, message: \"Registration successful. Login to continue...\"}});}, 400)\r\n          }\r\n        else if(result.response_status === 1001)\r\n          setSubmitError(result.message);\r\n        else\r\n          setSubmitError(result.message + \" \" + result.response_status);\r\n        setFormSubmitting(false);\r\n      })\r\n      .catch(err=>{setSubmitError(\"Network Error\");setFormSubmitting(false);});\r\n    }\r\n    \r\n  }\r\n\r\n  const handleChange = (e) =>{\r\n    if(e.target.name === 'email'){\r\n\r\n      let regex = /^[^\\s@]+@[^\\s@\\.]+\\.[^\\s@]+$/gi;\r\n      \r\n      regex.test(e.target.value)\r\n        ?setFormError({...formError, email: null})\r\n        :setFormError({...formError, email: \"Invalid Email\"});\r\n    }\r\n    else if(e.target.name === 'password'){\r\n\r\n      let regex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/gi;\r\n\r\n      regex.test(e.target.value)\r\n        ?setFormError({...formError, password:null})\r\n        :setFormError({...formError, password: \"At least one letter, one number and one special character\"});\r\n    }else{\r\n      //changed last setFormError parameter from setFormError\r\n        e.target.value?setFormError({...formError, [e.target.name]: null}):setFormError({...formError, [e.target.name]: \"Required!\"})\r\n    }\r\n  \r\n  }\r\n\r\n  useEffect(()=>{setTimeout(function(){changeAnimateClass('show-component')}, 100)},[]);\r\n\r\n  return (\r\n    <div className={\"login-form hidden-initial \" + animateClass}>\r\n      \r\n      <style>{`\r\n      body > div,\r\n      body > div > div,\r\n      body > div > div > div.login-form {\r\n        height: 100%;\r\n      }\r\n    `}</style>\r\n      <Grid\r\n        textAlign=\"center\"\r\n        style={{ height: \"100%\" }}\r\n        verticalAlign=\"middle\"\r\n      >\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n\r\n          <Header as=\"p\" color=\"blue\" textAlign=\"center\">\r\n            <br />\r\n            Signup\r\n          </Header>\r\n          {submitError &&\r\n          <Message color=\"red\">\r\n            <Message.Header>\r\n              {submitError}\r\n            </Message.Header>\r\n          </Message>}\r\n          <Form size=\"large\" onSubmit={handleSubmit} action=\"POST\">\r\n\r\n            <Segment stacked>\r\n\r\n            <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                error={formError && formError.name}\r\n                onChange={handleChange}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email address\"\r\n                name=\"email\"\r\n                error={formError && formError.email}\r\n                onChange={handleChange}\r\n              />\r\n             \r\n              <Form.Field control='select' name=\"role\" error={formError && formError.role} onChange={handleChange}>\r\n                {roleOption.map((role, index) =>{\r\n                    return(\r\n                        <option value={role.value} key={index}>{role.text}</option>\r\n                    )\r\n                })}\r\n\r\n              </Form.Field>\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                error={formError && formError.password}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <button className={\"ui blue large fluid button \"+(isFormSubmitting?\"loading\":\"\")} type=\"submit\" disabled={isFormSubmitting || !Object.keys(formError).length>0 || (formError.email || formError.password || formError.name || formError.role)}>Signup</button>\r\n            </Segment>\r\n          </Form>\r\n          <Message>\r\n            Allready have an account? <Link to=\"/log-in\"> Login</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\AdminDashboard.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\screens\\UserDashboard.js",["74"],"import React, { useContext } from 'react';\r\n// import { BrowserRouter as Router, Route, Redirect, useLocation, Link} from 'react-router-dom';\r\n\r\n// import {Icon, Modal, Message, Grid} from 'semantic-ui-react';\r\nimport UserSidebar from '../components/UserSidebar';\r\n//import { AuthContext } from '../context/AuthContext';\r\n\r\nexport default function UserDashboard() {    \r\n  //const { user, isActive } = useContext(AuthContext);\r\n  //console.log(user)\r\n\r\n   \r\n    return (\r\n      <>\r\n        <UserSidebar/>\r\n        \r\n        </>\r\n      );\r\n\r\n}","F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserList.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\Sidebar.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\AdminDefault.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\AdminLoader.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserSidebar.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserFilesList.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\utils\\constants.js",[],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserApp.js",["75"],"F:\\projects\\react-node-mongo projects\\college-util\\client\\src\\components\\UserHeader.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":104,"column":34,"nodeType":"82","messageId":"83","endLine":104,"endColumn":35,"suggestions":"84"},{"ruleId":"80","severity":1,"message":"81","line":84,"column":34,"nodeType":"82","messageId":"83","endLine":84,"endColumn":35,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":4,"column":33,"nodeType":"88","messageId":"89","endLine":4,"endColumn":36},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["93","94"],["95","96"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"97","fix":"98","desc":"99"},{"messageId":"100","fix":"101","desc":"102"},{"messageId":"97","fix":"103","desc":"99"},{"messageId":"100","fix":"104","desc":"102"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},[2971,2972],"",[2971,2971],"\\",[2441,2442],[2441,2441]]